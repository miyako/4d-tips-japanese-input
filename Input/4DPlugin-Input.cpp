/* --------------------------------------------------------------------------------
 #
 #  4DPlugin-Input.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : Input
 #	author : miyako
 #	2023/08/01
 #  
 # --------------------------------------------------------------------------------*/

#include "4DPlugin-Input.h"

#pragma mark -

void PluginMain(PA_long32 selector, PA_PluginParameters params) {
    
	try
	{
        switch(selector)
        {
			// --- Input
            
			case 1 :
				INPUT_SET_JAPANESE(params);
				break;
            case 2 :
                INPUT_SET_ASCII(params);
                break;

        }

	}
	catch(...)
	{

	}
}

static void _keycode_api(command_mode_t lang) {
    
    CGKeyCode keycode;
    
    if(lang == command_mode_ja)
    {
        keycode = kVK_JIS_Kana;
    }else{
        keycode = kVK_JIS_Eisu;
    }

    CGEventRef e;
        
    CGEventSourceRef eventSource = CGEventSourceCreate(kCGEventSourceStateHIDSystemState);
    CGEventFlags eventFlags = 0;
    
    e = CGEventCreateKeyboardEvent (eventSource, keycode, true);
    CGEventSetFlags(e, eventFlags );
    CGEventPost(kCGHIDEventTap, e);
    CFRelease(e);
       
    e = CGEventCreateKeyboardEvent (eventSource, keycode, false);
    CGEventSetFlags(e, eventFlags );
    CGEventPost(kCGHIDEventTap, e);
    CFRelease(e);
    
    CFRelease(eventSource);
}

static void _carbon_api(command_mode_t *lang) {
    
    TISInputSourceRef source;
    
    if(*lang == command_mode_ja)
    {
        source = TISCopyInputSourceForLanguage(CFSTR("ja-JP"));
    }else{
        source = TISCopyCurrentASCIICapableKeyboardInputSource();
    }

    if(source) {
        /*
         *      If there is more than one such input source
         *      and at least one has previously been used, then the
         *      most-recently-used one will be chosen
         */
        TISSelectInputSource(source);
        CFRelease(source);
    }
    
}

#pragma mark -

void INPUT_SET_JAPANESE(PA_PluginParameters params) {

    api_mode_t mode = (api_mode_t)PA_GetLongParameter(params, 1);
    command_mode_t lang = command_mode_ja;
    
    switch (mode) {
        case api_mode_carbon:
            PA_RunInMainProcess((PA_RunInMainProcessProcPtr)_carbon_api, &lang);
            break;
        case api_mode_kana:
            _keycode_api(lang);
            break;
        default:
            break;
    }
    
}

void INPUT_SET_ASCII(PA_PluginParameters params) {

    api_mode_t mode = (api_mode_t)PA_GetLongParameter(params, 1);
    command_mode_t lang = command_mode_ascii;
    
    switch (mode) {
        case api_mode_carbon:
            PA_RunInMainProcess((PA_RunInMainProcessProcPtr)_carbon_api, &lang);
            break;
        case api_mode_kana:
            _keycode_api(lang);
            break;
        default:
            break;
    }
    
}
